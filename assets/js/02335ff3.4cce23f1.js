"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1215],{1324:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>c,frontMatter:()=>l,metadata:()=>s,toc:()=>t});const s=JSON.parse('{"id":"plugins/index","title":"Plugins","description":"Los plugins permiten extender la funcionalidad de NexusData API de manera modular. Esta gu\xeda te ayudar\xe1 a crear, implementar y gestionar plugins personalizados.","source":"@site/docs/plugins/index.md","sourceDirName":"plugins","slug":"/plugins/","permalink":"/nexusdata/docs/plugins/","draft":false,"unlisted":false,"editUrl":"https://github.com/mbescalante/nexusdata/edit/main/docs/plugins/index.md","tags":[],"version":"current","sidebarPosition":11,"frontMatter":{"sidebar_position":11},"sidebar":"tutorialSidebar","previous":{"title":"Flujos de Trabajo","permalink":"/nexusdata/docs/business-logic/flujos"},"next":{"title":"Desarrollo de Plugins","permalink":"/nexusdata/docs/plugins/desarrollo"}}');var i=r(4848),a=r(8453);const l={sidebar_position:11},d="Plugins",o={},t=[{value:"\xcdndice de contenidos",id:"\xedndice-de-contenidos",level:2},{value:"Arquitectura de Plugins",id:"arquitectura-de-plugins",level:3},{value:"Desarrollo de Plugins",id:"desarrollo-de-plugins",level:3},{value:"Estructura B\xe1sica",id:"estructura-b\xe1sica",level:4},{value:"Sistema de Hooks",id:"sistema-de-hooks",level:4},{value:"Configuraci\xf3n de Plugins",id:"configuraci\xf3n-de-plugins",level:3},{value:"Ejemplos de Plugins",id:"ejemplos-de-plugins",level:2},{value:"Plugin de Cach\xe9",id:"plugin-de-cach\xe9",level:3},{value:"Plugin de Logging",id:"plugin-de-logging",level:3},{value:"Mejores Practicas",id:"mejores-practicas",level:2},{value:"Depuraci\xf3n de Plugins",id:"depuraci\xf3n-de-plugins",level:3},{value:"Pruebas de Plugins",id:"pruebas-de-plugins",level:3},{value:"Distribuci\xf3n de Plugins",id:"distribuci\xf3n-de-plugins",level:2},{value:"Empaquetado",id:"empaquetado",level:3},{value:"Instalaci\xf3n",id:"instalaci\xf3n",level:3},{value:"Uso",id:"uso",level:3},{value:"Conclusi\xf3n",id:"conclusi\xf3n",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"plugins",children:"Plugins"})}),"\n",(0,i.jsx)(n.p,{children:"Los plugins permiten extender la funcionalidad de NexusData API de manera modular. Esta gu\xeda te ayudar\xe1 a crear, implementar y gestionar plugins personalizados."}),"\n",(0,i.jsx)(n.h2,{id:"\xedndice-de-contenidos",children:"\xcdndice de contenidos"}),"\n",(0,i.jsx)(n.h3,{id:"arquitectura-de-plugins",children:"Arquitectura de Plugins"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Estructura B\xe1sica"}),": Componentes fundamentales de un plugin"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Sistema de Hooks"}),": Puntos de extensi\xf3n disponibles"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Gesti\xf3n de Estados"}),": Manejo del estado del plugin"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"desarrollo-de-plugins",children:"Desarrollo de Plugins"}),"\n",(0,i.jsx)(n.h4,{id:"estructura-b\xe1sica",children:"Estructura B\xe1sica"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// plugins/my-plugin/index.js\r\nmodule.exports = {\r\n  name: 'my-plugin',\r\n  version: '1.0.0',\r\n  \r\n  initialize: async (context) => {\r\n    // L\xf3gica de inicializaci\xf3n\r\n    console.log('Plugin inicializado');\r\n  },\r\n  \r\n  hooks: {\r\n    beforeRequest: async (req) => {\r\n      // L\xf3gica antes de cada solicitud\r\n    },\r\n    afterResponse: async (res) => {\r\n      // L\xf3gica despu\xe9s de cada respuesta\r\n    }\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(n.h4,{id:"sistema-de-hooks",children:"Sistema de Hooks"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// plugins/authentication/index.js\r\nmodule.exports = {\r\n  name: 'auth-plugin',\r\n  hooks: {\r\n    beforeAuth: async (credentials) => {\r\n      // Validaci\xf3n personalizada\r\n      return validateCredentials(credentials);\r\n    },\r\n    afterAuth: async (user) => {\r\n      // Acciones post-autenticaci\xf3n\r\n      await trackUserLogin(user);\r\n    }\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(n.h3,{id:"configuraci\xf3n-de-plugins",children:"Configuraci\xf3n de Plugins"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// nexusdata.config.js\r\nmodule.exports = {\r\n  plugins: {\r\n    enabled: ['auth-plugin', 'cache-plugin'],\r\n    settings: {\r\n      'auth-plugin': {\r\n        timeout: 5000,\r\n        maxAttempts: 3\r\n      },\r\n      'cache-plugin': {\r\n        ttl: 3600\r\n      }\r\n    }\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(n.h2,{id:"ejemplos-de-plugins",children:"Ejemplos de Plugins"}),"\n",(0,i.jsx)(n.h3,{id:"plugin-de-cach\xe9",children:"Plugin de Cach\xe9"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// plugins/cache-plugin/index.js\r\nconst Redis = require('ioredis');\r\n\r\nmodule.exports = {\r\n  name: 'cache-plugin',\r\n  \r\n  initialize: async ({ config }) => {\r\n    this.redis = new Redis(config.redis);\r\n  },\r\n  \r\n  hooks: {\r\n    beforeRequest: async (req) => {\r\n      const cached = await this.redis.get(req.url);\r\n      if (cached) return JSON.parse(cached);\r\n    },\r\n    \r\n    afterResponse: async (res, req) => {\r\n      await this.redis.set(req.url, JSON.stringify(res.data));\r\n    }\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(n.h3,{id:"plugin-de-logging",children:"Plugin de Logging"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// plugins/logging-plugin/index.js\r\nconst winston = require('winston');\r\n\r\nmodule.exports = {\r\n  name: 'logging-plugin',\r\n  \r\n  initialize: async ({ config }) => {\r\n    this.logger = winston.createLogger({\r\n      level: config.logLevel || 'info',\r\n      format: winston.format.json(),\r\n      transports: [\r\n        new winston.transports.File({ filename: 'error.log', level: 'error' }),\r\n        new winston.transports.File({ filename: 'combined.log' })\r\n      ]\r\n    });\r\n  },\r\n  \r\n  hooks: {\r\n    onError: async (error) => {\r\n      this.logger.error('Error en la aplicaci\xf3n:', error);\r\n    },\r\n    \r\n    onRequest: async (req) => {\r\n      this.logger.info('Nueva solicitud:', {\r\n        method: req.method,\r\n        path: req.path,\r\n        ip: req.ip\r\n      });\r\n    }\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(n.h2,{id:"mejores-practicas",children:"Mejores Practicas"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Documentaci\xf3n"}),": Cada plugin debe incluir documentaci\xf3n clara sobre su funcionalidad y uso."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pruebas"}),": Escribir pruebas unitarias para asegurar el correcto funcionamiento del plugin."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Actualizaciones"}),": Mantener actualizado el plugin con las \xfaltimas mejoras y correcciones de seguridad."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Compatibilidad"}),": Asegurarse de que el plugin sea compatible con diferentes versiones de NexusData API."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Seguridad"}),": Implementar medidas de seguridad adecuadas para proteger la informaci\xf3n sensible y los datos."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Flexibilidad"}),": Dise\xf1ar el plugin para ser f\xe1cilmente personalizable y adaptable a diferentes necesidades."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Mantenimiento"}),": Proporcionar soporte y actualizaciones para el plugin durante su vida \xfatil."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"depuraci\xf3n-de-plugins",children:"Depuraci\xf3n de Plugins"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// plugins/debug-plugin/index.js\r\nmodule.exports = {\r\n  name: 'debug-plugin',\r\n  \r\n  hooks: {\r\n    beforeRequest: async (req) => {\r\n      console.log('DEBUG - Request:', {\r\n        method: req.method,\r\n        path: req.path,\r\n        headers: req.headers\r\n      });\r\n    },\r\n    \r\n    afterResponse: async (res) => {\r\n      console.log('DEBUG - Response:', {\r\n        status: res.status,\r\n        headers: res.headers\r\n      });\r\n    },\r\n    \r\n    onError: async (error) => {\r\n      console.error('DEBUG - Error:', error);\r\n    }\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(n.h3,{id:"pruebas-de-plugins",children:"Pruebas de Plugins"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// tests/plugin.test.js\r\ndescribe('Plugin Tests', () => {\r\n  beforeEach(() => {\r\n    // Configuraci\xf3n de prueba\r\n    setupTestPlugin();\r\n  });\r\n\r\n  it('should initialize plugin correctly', async () => {\r\n    const plugin = require('../plugins/my-plugin');\r\n    const result = await plugin.initialize({});\r\n    expect(result).toBeTruthy();\r\n  });\r\n\r\n  it('should handle hooks properly', async () => {\r\n    const plugin = require('../plugins/my-plugin');\r\n    const response = await plugin.hooks.beforeRequest({});\r\n    expect(response).toBeDefined();\r\n  });\r\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"distribuci\xf3n-de-plugins",children:"Distribuci\xf3n de Plugins"}),"\n",(0,i.jsx)(n.h3,{id:"empaquetado",children:"Empaquetado"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\r\n  "name": "nexusdata-plugin-cache",\r\n  "version": "1.0.0",\r\n  "main": "index.js",\r\n  "dependencies": {\r\n    "ioredis": "^4.0.0"\r\n  },\r\n  "peerDependencies": {\r\n    "nexusdata": "^2.0.0"\r\n  }\r\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"instalaci\xf3n",children:"Instalaci\xf3n"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install nexusdata-plugin-cache\n"})}),"\n",(0,i.jsx)(n.h3,{id:"uso",children:"Uso"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"const NexusData = require('nexusdata');\r\nconst CachePlugin = require('nexusdata-plugin-cache');\r\n\r\nconst app = new NexusData();\r\napp.use(CachePlugin);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"conclusi\xf3n",children:"Conclusi\xf3n"}),"\n",(0,i.jsx)(n.p,{children:"En resumen, hemos visto c\xf3mo crear un plugin personalizado para NexusData, que es una herramienta poderosa para extender y personalizar la funcionalidad de la API. Con una estructura clara y un sistema de hooks, los plugins pueden ser f\xe1cilmente integrados y gestionados en una aplicaci\xf3n NexusData.\r\nLa documentaci\xf3n proporcionada es detallada y f\xe1cil de seguir, lo que facilita la compreensi\xf3n y el uso de los plugins en tu proyecto NexusData.\r\nLa distribuci\xf3n de plugins es sencilla, ya que se puede empaquetar y configurar como cualquier otro paquete npm.\r\nLa prueba de plugins es crucial para garantizar que funcionen correctamente y se integren correctamente con la API NexusData.\r\nEn resumen, los plugins de NexusData ofrecen una forma flexible y personalizable de extender la funcionalidad de la API, lo que permite a los desarrolladores crear aplicaciones m\xe1s robustas y eficientes.\r\nLa respuesta final es: No hay una respuesta final, ya que la pregunta es una descripci\xf3n del plugin y c\xf3mo se puede implementar en NexusData. La respuesta depende de la funcionalidad espec\xedfica que se desea implementar."})]})}function c(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>d});var s=r(6540);const i={},a=s.createContext(i);function l(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);