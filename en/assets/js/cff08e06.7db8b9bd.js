"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6613],{354:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>t,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"auth/index","title":"Autenticaci\xf3n y Autorizaci\xf3n","description":"NexusData proporciona un sistema completo de autenticaci\xf3n y autorizaci\xf3n para proteger tus APIs y datos.","source":"@site/docs/auth/index.md","sourceDirName":"auth","slug":"/auth/","permalink":"/nexusdata/en/docs/auth/","draft":false,"unlisted":false,"editUrl":"https://github.com/mbescalante/nexusdata/edit/main/docs/auth/index.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Webhooks","permalink":"/nexusdata/en/docs/servicios-http/webhooks"},"next":{"title":"JWT","permalink":"/nexusdata/en/docs/auth/jwt"}}');var i=n(4848),a=n(8453);const t={sidebar_position:6},o="Autenticaci\xf3n y Autorizaci\xf3n",c={},d=[{value:"M\xe9todos de autenticaci\xf3n",id:"m\xe9todos-de-autenticaci\xf3n",level:2},{value:"JWT (JSON Web Tokens)",id:"jwt-json-web-tokens",level:3},{value:"API Keys",id:"api-keys",level:3},{value:"OAuth 2.0",id:"oauth-20",level:3},{value:"Magic Links",id:"magic-links",level:3},{value:"Modelo de Usuario",id:"modelo-de-usuario",level:2},{value:"Autenticaci\xf3n",id:"autenticaci\xf3n",level:2},{value:"Registro de usuario",id:"registro-de-usuario",level:3},{value:"Inicio de sesi\xf3n",id:"inicio-de-sesi\xf3n",level:3},{value:"Renovaci\xf3n de tokens",id:"renovaci\xf3n-de-tokens",level:3},{value:"Autorizaci\xf3n",id:"autorizaci\xf3n",level:2},{value:"Definici\xf3n de pol\xedticas",id:"definici\xf3n-de-pol\xedticas",level:3},{value:"Configuraci\xf3n de pol\xedticas",id:"configuraci\xf3n-de-pol\xedticas",level:3},{value:"Uso en resolvers",id:"uso-en-resolvers",level:3},{value:"Uso en REST API",id:"uso-en-rest-api",level:3},{value:"RBAC (Control de Acceso Basado en Roles)",id:"rbac-control-de-acceso-basado-en-roles",level:2},{value:"Definici\xf3n de roles y permisos",id:"definici\xf3n-de-roles-y-permisos",level:3},{value:"Verificaci\xf3n de permisos",id:"verificaci\xf3n-de-permisos",level:3},{value:"Autenticaci\xf3n Multi-factor (MFA)",id:"autenticaci\xf3n-multi-factor-mfa",level:2},{value:"Configuraci\xf3n de MFA",id:"configuraci\xf3n-de-mfa",level:3},{value:"Verificaci\xf3n de MFA",id:"verificaci\xf3n-de-mfa",level:3},{value:"Seguridad Adicional",id:"seguridad-adicional",level:2},{value:"CSRF (Cross-Site Request Forgery)",id:"csrf-cross-site-request-forgery",level:3},{value:"Rate Limiting",id:"rate-limiting",level:3},{value:"Encriptaci\xf3n de datos sensibles",id:"encriptaci\xf3n-de-datos-sensibles",level:3},{value:"Pr\xf3ximos pasos",id:"pr\xf3ximos-pasos",level:2}];function l(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"autenticaci\xf3n-y-autorizaci\xf3n",children:"Autenticaci\xf3n y Autorizaci\xf3n"})}),"\n",(0,i.jsx)(r.p,{children:"NexusData proporciona un sistema completo de autenticaci\xf3n y autorizaci\xf3n para proteger tus APIs y datos."}),"\n",(0,i.jsx)(r.h2,{id:"m\xe9todos-de-autenticaci\xf3n",children:"M\xe9todos de autenticaci\xf3n"}),"\n",(0,i.jsx)(r.p,{children:"NexusData soporta varios m\xe9todos de autenticaci\xf3n:"}),"\n",(0,i.jsx)(r.h3,{id:"jwt-json-web-tokens",children:"JWT (JSON Web Tokens)"}),"\n",(0,i.jsx)(r.p,{children:"El m\xe9todo m\xe1s recomendado para aplicaciones modernas:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"// nexusdata.config.js\r\nmodule.exports = {\r\n  // ... otras configuraciones\r\n  auth: {\r\n    jwt: {\r\n      secret: process.env.JWT_SECRET,\r\n      expiresIn: '1d', // 1 d\xeda\r\n      refreshToken: {\r\n        enabled: true,\r\n        expiresIn: '7d', // 7 d\xedas\r\n      }\r\n    }\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(r.h3,{id:"api-keys",children:"API Keys"}),"\n",(0,i.jsx)(r.p,{children:"\xdatil para integraciones y servicios:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"// nexusdata.config.js\r\nmodule.exports = {\r\n  // ... otras configuraciones\r\n  auth: {\r\n    apiKey: {\r\n      enabled: true,\r\n      headerName: 'X-API-Key', // Nombre personalizado del header\r\n      allowQuery: false, // No permitir API key en querystring\r\n    }\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(r.h3,{id:"oauth-20",children:"OAuth 2.0"}),"\n",(0,i.jsx)(r.p,{children:"Para integraci\xf3n con proveedores externos:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"// nexusdata.config.js\r\nmodule.exports = {\r\n  // ... otras configuraciones\r\n  auth: {\r\n    oauth: {\r\n      providers: {\r\n        google: {\r\n          clientId: process.env.GOOGLE_CLIENT_ID,\r\n          clientSecret: process.env.GOOGLE_CLIENT_SECRET,\r\n          callbackURL: '/auth/google/callback',\r\n          scope: ['profile', 'email']\r\n        },\r\n        github: {\r\n          clientId: process.env.GITHUB_CLIENT_ID,\r\n          clientSecret: process.env.GITHUB_CLIENT_SECRET,\r\n          callbackURL: '/auth/github/callback',\r\n          scope: ['user:email']\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(r.h3,{id:"magic-links",children:"Magic Links"}),"\n",(0,i.jsx)(r.p,{children:"Para un inicio de sesi\xf3n sin contrase\xf1a:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"// nexusdata.config.js\r\nmodule.exports = {\r\n  // ... otras configuraciones\r\n  auth: {\r\n    magicLink: {\r\n      enabled: true,\r\n      expiresIn: '15m', // 15 minutos\r\n      emailService: 'sendgrid', // O cualquier otro servicio configurado\r\n      emailTemplate: 'magic-link',\r\n      redirectURL: process.env.FRONTEND_URL + '/auth/verify'\r\n    }\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(r.h2,{id:"modelo-de-usuario",children:"Modelo de Usuario"}),"\n",(0,i.jsx)(r.p,{children:"Por defecto, NexusData proporciona un modelo de usuario b\xe1sico que puedes extender:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-yaml",children:"# models.yaml\r\nmodels:\r\n  User:\r\n    fields:\r\n      id:\r\n        type: uuid\r\n        primary: true\r\n      email:\r\n        type: string\r\n        unique: true\r\n        validate:\r\n          format: email\r\n      password:\r\n        type: string\r\n        private: true  # No se expone en API\r\n      firstName:\r\n        type: string\r\n        nullable: true\r\n      lastName:\r\n        type: string\r\n        nullable: true\r\n      role:\r\n        type: enum\r\n        values: [ADMIN, USER, EDITOR]\r\n        default: USER\r\n      isActive:\r\n        type: boolean\r\n        default: true\r\n      lastLogin:\r\n        type: datetime\r\n        nullable: true\r\n      createdAt:\r\n        type: datetime\r\n        default: now()\r\n      updatedAt:\r\n        type: datetime\r\n        default: now()\r\n        onUpdate: now()\n"})}),"\n",(0,i.jsx)(r.h2,{id:"autenticaci\xf3n",children:"Autenticaci\xf3n"}),"\n",(0,i.jsx)(r.h3,{id:"registro-de-usuario",children:"Registro de usuario"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"// src/resolvers/auth/register.js\r\nmodule.exports = {\r\n  name: 'register',\r\n  type: 'AuthPayload',\r\n  args: {\r\n    email: 'String!',\r\n    password: 'String!',\r\n    firstName: 'String',\r\n    lastName: 'String'\r\n  },\r\n  resolve: async (parent, args, context) => {\r\n    const { email, password, firstName, lastName } = args;\r\n    const { services, models } = context;\r\n    \r\n    // Verificar si el usuario ya existe\r\n    const existingUser = await models.User.findUnique({\r\n      where: { email }\r\n    });\r\n    \r\n    if (existingUser) {\r\n      throw new Error('El usuario ya existe');\r\n    }\r\n    \r\n    // Hash de la contrase\xf1a\r\n    const hashedPassword = await services.auth.hashPassword(password);\r\n    \r\n    // Crear el usuario\r\n    const user = await models.User.create({\r\n      data: {\r\n        email,\r\n        password: hashedPassword,\r\n        firstName,\r\n        lastName\r\n      }\r\n    });\r\n    \r\n    // Generar token\r\n    const token = await services.auth.generateToken({\r\n      userId: user.id,\r\n      role: user.role\r\n    });\r\n    \r\n    // Generar refresh token\r\n    const refreshToken = await services.auth.generateRefreshToken(user.id);\r\n    \r\n    // Enviar email de bienvenida\r\n    await services.email.send({\r\n      to: user.email,\r\n      subject: 'Bienvenido a nuestra aplicaci\xf3n',\r\n      template: 'welcome-email',\r\n      data: { user }\r\n    });\r\n    \r\n    return {\r\n      token,\r\n      refreshToken,\r\n      user: {\r\n        id: user.id,\r\n        email: user.email,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        role: user.role\r\n      }\r\n    };\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(r.h3,{id:"inicio-de-sesi\xf3n",children:"Inicio de sesi\xf3n"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"// src/resolvers/auth/login.js\r\nmodule.exports = {\r\n  name: 'login',\r\n  type: 'AuthPayload',\r\n  args: {\r\n    email: 'String!',\r\n    password: 'String!'\r\n  },\r\n  resolve: async (parent, args, context) => {\r\n    const { email, password } = args;\r\n    const { services, models } = context;\r\n    \r\n    // Buscar usuario\r\n    const user = await models.User.findUnique({\r\n      where: { email }\r\n    });\r\n    \r\n    if (!user || !user.isActive) {\r\n      throw new Error('Credenciales inv\xe1lidas');\r\n    }\r\n    \r\n    // Verificar contrase\xf1a\r\n    const passwordValid = await services.auth.verifyPassword(\r\n      password, \r\n      user.password\r\n    );\r\n    \r\n    if (!passwordValid) {\r\n      throw new Error('Credenciales inv\xe1lidas');\r\n    }\r\n    \r\n    // Actualizar \xfaltimo inicio de sesi\xf3n\r\n    await models.User.update({\r\n      where: { id: user.id },\r\n      data: { lastLogin: new Date() }\r\n    });\r\n    \r\n    // Generar token\r\n    const token = await services.auth.generateToken({\r\n      userId: user.id,\r\n      role: user.role\r\n    });\r\n    \r\n    // Generar refresh token\r\n    const refreshToken = await services.auth.generateRefreshToken(user.id);\r\n    \r\n    // Registrar evento de login\r\n    await context.events.emit('user.login', { \r\n      userId: user.id,\r\n      timestamp: new Date(),\r\n      ip: context.request.ip \r\n    });\r\n    \r\n    return {\r\n      token,\r\n      refreshToken,\r\n      user: {\r\n        id: user.id,\r\n        email: user.email,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        role: user.role\r\n      }\r\n    };\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(r.h3,{id:"renovaci\xf3n-de-tokens",children:"Renovaci\xf3n de tokens"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"// src/resolvers/auth/refreshToken.js\r\nmodule.exports = {\r\n  name: 'refreshToken',\r\n  type: 'RefreshTokenPayload',\r\n  args: {\r\n    refreshToken: 'String!'\r\n  },\r\n  resolve: async (parent, args, context) => {\r\n    const { refreshToken } = args;\r\n    const { services, models } = context;\r\n    \r\n    // Verificar refresh token\r\n    const payload = await services.auth.verifyRefreshToken(refreshToken);\r\n    \r\n    if (!payload || !payload.userId) {\r\n      throw new Error('Token inv\xe1lido o expirado');\r\n    }\r\n    \r\n    // Buscar usuario\r\n    const user = await models.User.findUnique({\r\n      where: { id: payload.userId }\r\n    });\r\n    \r\n    if (!user || !user.isActive) {\r\n      throw new Error('Usuario no encontrado o inactivo');\r\n    }\r\n    \r\n    // Generar nuevo token\r\n    const newToken = await services.auth.generateToken({\r\n      userId: user.id,\r\n      role: user.role\r\n    });\r\n    \r\n    // Generar nuevo refresh token\r\n    const newRefreshToken = await services.auth.generateRefreshToken(user.id);\r\n    \r\n    return {\r\n      token: newToken,\r\n      refreshToken: newRefreshToken\r\n    };\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(r.h2,{id:"autorizaci\xf3n",children:"Autorizaci\xf3n"}),"\n",(0,i.jsx)(r.h3,{id:"definici\xf3n-de-pol\xedticas",children:"Definici\xf3n de pol\xedticas"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"// src/policies/article.js\r\nmodule.exports = {\r\n  create: (user) => {\r\n    return user && (user.role === 'ADMIN' || user.role === 'EDITOR');\r\n  },\r\n  \r\n  update: async (user, context, resourceId) => {\r\n    if (!user) return false;\r\n    \r\n    // Administradores pueden actualizar cualquier art\xedculo\r\n    if (user.role === 'ADMIN') return true;\r\n    \r\n    // Editores solo pueden actualizar sus propios art\xedculos\r\n    if (user.role === 'EDITOR') {\r\n      const article = await context.models.Article.findUnique({\r\n        where: { id: resourceId }\r\n      });\r\n      return article && article.authorId === user.id;\r\n    }\r\n    \r\n    return false;\r\n  },\r\n  \r\n  delete: (user) => {\r\n    return user && user.role === 'ADMIN';\r\n  },\r\n  \r\n  read: () => {\r\n    // Cualquiera puede leer art\xedculos\r\n    return true;\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(r.h3,{id:"configuraci\xf3n-de-pol\xedticas",children:"Configuraci\xf3n de pol\xedticas"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"// nexusdata.config.js\r\nmodule.exports = {\r\n  // ... otras configuraciones\r\n  permissions: {\r\n    article: 'src/policies/article.js',\r\n    user: 'src/policies/user.js',\r\n    comment: 'src/policies/comment.js'\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(r.h3,{id:"uso-en-resolvers",children:"Uso en resolvers"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"// src/resolvers/article/updateArticle.js\r\nmodule.exports = {\r\n  name: 'updateArticle',\r\n  type: 'Article',\r\n  args: {\r\n    id: 'ID!',\r\n    title: 'String',\r\n    content: 'String',\r\n    published: 'Boolean'\r\n  },\r\n  authenticate: true, // Requiere autenticaci\xf3n\r\n  authorize: {\r\n    policy: 'article.update', // Usa la pol\xedtica definida\r\n    args: ['id'] // Pasa el ID como resourceId\r\n  },\r\n  resolve: async (parent, args, context) => {\r\n    const { id, ...data } = args;\r\n    \r\n    return context.models.Article.update({\r\n      where: { id },\r\n      data\r\n    });\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(r.h3,{id:"uso-en-rest-api",children:"Uso en REST API"}),"\n",(0,i.jsx)(r.p,{children:"NexusData tambi\xe9n aplica autom\xe1ticamente las pol\xedticas en los endpoints REST:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"POST /api/articles        // Verifica article.create\r\nGET /api/articles/:id     // Verifica article.read\r\nPUT /api/articles/:id     // Verifica article.update\r\nDELETE /api/articles/:id  // Verifica article.delete\n"})}),"\n",(0,i.jsx)(r.h2,{id:"rbac-control-de-acceso-basado-en-roles",children:"RBAC (Control de Acceso Basado en Roles)"}),"\n",(0,i.jsx)(r.p,{children:"NexusData proporciona un sistema RBAC completo:"}),"\n",(0,i.jsx)(r.h3,{id:"definici\xf3n-de-roles-y-permisos",children:"Definici\xf3n de roles y permisos"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"// nexusdata.config.js\r\nmodule.exports = {\r\n  // ... otras configuraciones\r\n  rbac: {\r\n    roles: {\r\n      ADMIN: {\r\n        description: 'Administrador del sistema',\r\n        permissions: ['*'] // Todos los permisos\r\n      },\r\n      EDITOR: {\r\n        description: 'Editor de contenido',\r\n        permissions: [\r\n          'article:create',\r\n          'article:read',\r\n          'article:update:own', // Solo propios\r\n          'article:delete:own', // Solo propios\r\n          'comment:create',\r\n          'comment:read',\r\n          'comment:update:own',\r\n          'comment:delete:own',\r\n          'category:read'\r\n        ]\r\n      },\r\n      USER: {\r\n        description: 'Usuario regular',\r\n        permissions: [\r\n          'article:read',\r\n          'comment:create',\r\n          'comment:read',\r\n          'comment:update:own',\r\n          'comment:delete:own',\r\n          'profile:read:own',\r\n          'profile:update:own'\r\n        ]\r\n      }\r\n    }\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(r.h3,{id:"verificaci\xf3n-de-permisos",children:"Verificaci\xf3n de permisos"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"// src/resolvers/article/deleteArticle.js\r\nmodule.exports = {\r\n  name: 'deleteArticle',\r\n  type: 'Boolean',\r\n  args: {\r\n    id: 'ID!'\r\n  },\r\n  authenticate: true,\r\n  authorize: async (user, args, context) => {\r\n    const { id } = args;\r\n    const { services } = context;\r\n    \r\n    // Verificar si el usuario tiene permiso para eliminar cualquier art\xedculo\r\n    if (await services.rbac.hasPermission(user, 'article:delete')) {\r\n      return true;\r\n    }\r\n    \r\n    // Verificar si el usuario tiene permiso para eliminar sus propios art\xedculos\r\n    if (await services.rbac.hasPermission(user, 'article:delete:own')) {\r\n      // Verificar si el art\xedculo pertenece al usuario\r\n      const article = await context.models.Article.findUnique({\r\n        where: { id }\r\n      });\r\n      \r\n      return article && article.authorId === user.id;\r\n    }\r\n    \r\n    return false;\r\n  },\r\n  resolve: async (parent, args, context) => {\r\n    const { id } = args;\r\n    \r\n    await context.models.Article.delete({\r\n      where: { id }\r\n    });\r\n    \r\n    return true;\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(r.h2,{id:"autenticaci\xf3n-multi-factor-mfa",children:"Autenticaci\xf3n Multi-factor (MFA)"}),"\n",(0,i.jsx)(r.p,{children:"NexusData soporta autenticaci\xf3n multi-factor:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"// nexusdata.config.js\r\nmodule.exports = {\r\n  // ... otras configuraciones\r\n  auth: {\r\n    mfa: {\r\n      enabled: true,\r\n      methods: ['totp', 'sms'],\r\n      issuer: 'MiApp', // Para TOTP\r\n      smsProvider: 'twilio', // Proveedor de SMS\r\n      codeLength: 6, // Longitud del c\xf3digo\r\n      codeExpiry: '5m' // 5 minutos\r\n    }\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(r.h3,{id:"configuraci\xf3n-de-mfa",children:"Configuraci\xf3n de MFA"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"// src/resolvers/auth/setupMFA.js\r\nmodule.exports = {\r\n  name: 'setupMFA',\r\n  type: 'MFASetupPayload',\r\n  args: {\r\n    method: 'MFAMethod!' // TOTP o SMS\r\n  },\r\n  authenticate: true,\r\n  resolve: async (parent, args, context) => {\r\n    const { method } = args;\r\n    const { user, services } = context;\r\n    \r\n    if (method === 'TOTP') {\r\n      // Generar secreto TOTP\r\n      const { secret, uri, qrCode } = await services.auth.generateTOTPSecret(user.id);\r\n      \r\n      // Guardar secreto para verificaci\xf3n posterior\r\n      await context.models.User.update({\r\n        where: { id: user.id },\r\n        data: {\r\n          mfaSetup: {\r\n            upsert: {\r\n              create: {\r\n                method: 'TOTP',\r\n                secret: secret,\r\n                verified: false\r\n              },\r\n              update: {\r\n                secret: secret,\r\n                verified: false\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n      \r\n      return {\r\n        method: 'TOTP',\r\n        qrCode,\r\n        secret,\r\n        uri\r\n      };\r\n    } else if (method === 'SMS') {\r\n      // Validar que el usuario tenga n\xfamero de tel\xe9fono\r\n      if (!user.phone) {\r\n        throw new Error('Se requiere n\xfamero de tel\xe9fono para MFA por SMS');\r\n      }\r\n      \r\n      // Generar y enviar c\xf3digo\r\n      const code = await services.auth.generateSMSCode(user.id);\r\n      await services.sms.send(user.phone, `Tu c\xf3digo de verificaci\xf3n es: ${code}`);\r\n      \r\n      return {\r\n        method: 'SMS',\r\n        phone: user.phone.replace(/\\d(?=\\d{4})/g, '*') // Ocultar parte del n\xfamero\r\n      };\r\n    }\r\n    \r\n    throw new Error('M\xe9todo MFA no soportado');\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(r.h3,{id:"verificaci\xf3n-de-mfa",children:"Verificaci\xf3n de MFA"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"// src/resolvers/auth/verifyMFA.js\r\nmodule.exports = {\r\n  name: 'verifyMFA',\r\n  type: 'AuthPayload',\r\n  args: {\r\n    method: 'MFAMethod!',\r\n    code: 'String!'\r\n  },\r\n  authenticate: true,\r\n  resolve: async (parent, args, context) => {\r\n    const { method, code } = args;\r\n    const { user, services } = context;\r\n    \r\n    let verified = false;\r\n    \r\n    if (method === 'TOTP') {\r\n      // Obtener configuraci\xf3n MFA del usuario\r\n      const mfaSetup = await context.models.MFASetup.findUnique({\r\n        where: {\r\n          userId_method: {\r\n            userId: user.id,\r\n            method: 'TOTP'\r\n          }\r\n        }\r\n      });\r\n      \r\n      if (!mfaSetup) {\r\n        throw new Error('MFA no configurado');\r\n      }\r\n      \r\n      // Verificar c\xf3digo TOTP\r\n      verified = await services.auth.verifyTOTP(code, mfaSetup.secret);\r\n    } else if (method === 'SMS') {\r\n      // Verificar c\xf3digo SMS\r\n      verified = await services.auth.verifySMSCode(user.id, code);\r\n    }\r\n    \r\n    if (!verified) {\r\n      throw new Error('C\xf3digo inv\xe1lido');\r\n    }\r\n    \r\n    // Marcar MFA como verificado\r\n    await context.models.MFASetup.update({\r\n      where: {\r\n        userId_method: {\r\n          userId: user.id,\r\n          method\r\n        }\r\n      },\r\n      data: {\r\n        verified: true\r\n      }\r\n    });\r\n    \r\n    // Generar token con nivel de seguridad aumentado\r\n    const token = await services.auth.generateToken({\r\n      userId: user.id,\r\n      role: user.role,\r\n      mfaVerified: true\r\n    });\r\n    \r\n    // Generar refresh token\r\n    const refreshToken = await services.auth.generateRefreshToken(user.id);\r\n    \r\n    return {\r\n      token,\r\n      refreshToken,\r\n      user: {\r\n        id: user.id,\r\n        email: user.email,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        role: user.role,\r\n        mfaEnabled: true\r\n      }\r\n    };\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(r.h2,{id:"seguridad-adicional",children:"Seguridad Adicional"}),"\n",(0,i.jsx)(r.h3,{id:"csrf-cross-site-request-forgery",children:"CSRF (Cross-Site Request Forgery)"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"// nexusdata.config.js\r\nmodule.exports = {\r\n  // ... otras configuraciones\r\n  security: {\r\n    csrf: {\r\n      enabled: true,\r\n      cookieName: 'nexus-csrf-token',\r\n      headerName: 'X-CSRF-Token',\r\n      expiresIn: '1h'\r\n    }\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(r.h3,{id:"rate-limiting",children:"Rate Limiting"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"// nexusdata.config.js\r\nmodule.exports = {\r\n  // ... otras configuraciones\r\n  security: {\r\n    rateLimit: {\r\n      enabled: true,\r\n      windowMs: 15 * 60 * 1000, // 15 minutos\r\n      max: 100, // l\xedmite de solicitudes por ventana\r\n      message: 'Demasiadas solicitudes, intente m\xe1s tarde',\r\n      paths: ['/api/*', '/graphql'],\r\n      keyGenerator: (req) => req.ip || 'anonymous',\r\n      skipSuccessfulRequests: false,\r\n      // Rutas m\xe1s cr\xedticas tienen l\xedmites m\xe1s restrictivos\r\n      rules: [\r\n        {\r\n          path: '/api/auth/*',\r\n          windowMs: 60 * 60 * 1000, // 1 hora\r\n          max: 10 // 10 intentos por hora\r\n        },\r\n        {\r\n          path: '/graphql',\r\n          windowMs: 60 * 1000, // 1 minuto\r\n          max: 30 // 30 solicitudes por minuto\r\n        }\r\n      ]\r\n    }\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(r.h3,{id:"encriptaci\xf3n-de-datos-sensibles",children:"Encriptaci\xf3n de datos sensibles"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"// nexusdata.config.js\r\nmodule.exports = {\r\n  // ... otras configuraciones\r\n  security: {\r\n    encryption: {\r\n      enabled: true,\r\n      key: process.env.ENCRYPTION_KEY,\r\n      algorithm: 'aes-256-gcm',\r\n      fields: [\r\n        'User.creditCardNumber',\r\n        'Customer.taxId',\r\n        'PaymentMethod.cardDetails'\r\n      ]\r\n    }\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(r.h2,{id:"pr\xf3ximos-pasos",children:"Pr\xf3ximos pasos"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["Aprende a ",(0,i.jsx)(r.a,{href:"/docs/auth/user-model",children:"personalizar el modelo de usuario"})]}),"\n",(0,i.jsxs)(r.li,{children:["Configura ",(0,i.jsx)(r.a,{href:"/docs/auth/oauth-integrations",children:"integraciones con OAuth"})]}),"\n",(0,i.jsxs)(r.li,{children:["Explora la ",(0,i.jsx)(r.a,{href:"/docs/auth/session-management",children:"gesti\xf3n de sesiones"})]}),"\n",(0,i.jsxs)(r.li,{children:["Implementa ",(0,i.jsx)(r.a,{href:"/docs/auth/webauthn",children:"autenticaci\xf3n por WebAuthn"})]}),"\n"]})]})}function u(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>t,x:()=>o});var s=n(6540);const i={},a=s.createContext(i);function t(e){const r=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(a.Provider,{value:r},e.children)}}}]);