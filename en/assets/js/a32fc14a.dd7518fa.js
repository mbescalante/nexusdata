"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4514],{4506:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"data-modeling/relationships","title":"Relaciones entre Modelos","description":"Las relaciones son una parte fundamental del modelado de datos en NexusData, permitiendo conectar diferentes entidades y realizar consultas eficientes.","source":"@site/docs/data-modeling/relationships.md","sourceDirName":"data-modeling","slug":"/data-modeling/relationships","permalink":"/en/docs/data-modeling/relationships","draft":false,"unlisted":false,"editUrl":"https://github.com/nexusdata/nexusdata-docs/edit/main/docs/data-modeling/relationships.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Esquemas de Datos","permalink":"/en/docs/data-modeling/schemas"},"next":{"title":"Validaci\xf3n de Datos","permalink":"/en/docs/data-modeling/validation"}}');var a=r(4848),i=r(8453);const s={sidebar_position:2},t="Relaciones entre Modelos",l={},d=[{value:"Tipos de Relaciones",id:"tipos-de-relaciones",level:2},{value:"Relaciones Uno a Uno",id:"relaciones-uno-a-uno",level:2},{value:"Ejemplo: Usuario y Perfil",id:"ejemplo-usuario-y-perfil",level:3},{value:"Relaciones Uno a Muchos / Muchos a Uno",id:"relaciones-uno-a-muchos--muchos-a-uno",level:2},{value:"Ejemplo: Autor y Art\xedculos",id:"ejemplo-autor-y-art\xedculos",level:3},{value:"Relaciones Muchos a Muchos",id:"relaciones-muchos-a-muchos",level:2},{value:"Ejemplo: Productos y Categor\xedas",id:"ejemplo-productos-y-categor\xedas",level:3},{value:"Relaciones Polim\xf3rficas",id:"relaciones-polim\xf3rficas",level:2},{value:"Ejemplo: Comentarios en diferentes entidades",id:"ejemplo-comentarios-en-diferentes-entidades",level:3},{value:"Relaciones Recursivas",id:"relaciones-recursivas",level:2},{value:"Ejemplo: Estructura jer\xe1rquica de categor\xedas",id:"ejemplo-estructura-jer\xe1rquica-de-categor\xedas",level:3},{value:"Opciones de Relaciones",id:"opciones-de-relaciones",level:2},{value:"Consultas con Relaciones",id:"consultas-con-relaciones",level:2},{value:"Carga de Relaciones (Eager Loading)",id:"carga-de-relaciones-eager-loading",level:3},{value:"Filtrado por Relaciones",id:"filtrado-por-relaciones",level:3},{value:"Mejores Pr\xe1cticas",id:"mejores-pr\xe1cticas",level:2},{value:"Pr\xf3ximos Pasos",id:"pr\xf3ximos-pasos",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"relaciones-entre-modelos",children:"Relaciones entre Modelos"})}),"\n",(0,a.jsx)(n.p,{children:"Las relaciones son una parte fundamental del modelado de datos en NexusData, permitiendo conectar diferentes entidades y realizar consultas eficientes."}),"\n",(0,a.jsx)(n.h2,{id:"tipos-de-relaciones",children:"Tipos de Relaciones"}),"\n",(0,a.jsx)(n.p,{children:"NexusData soporta los siguientes tipos de relaciones:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.strong,{children:"Uno a Uno (One-to-One)"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.strong,{children:"Uno a Muchos (One-to-Many)"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.strong,{children:"Muchos a Uno (Many-to-One)"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.strong,{children:"Muchos a Muchos (Many-to-Many)"})}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"relaciones-uno-a-uno",children:"Relaciones Uno a Uno"}),"\n",(0,a.jsx)(n.p,{children:"Una relaci\xf3n uno a uno conecta una instancia de un modelo con exactamente una instancia de otro modelo."}),"\n",(0,a.jsx)(n.h3,{id:"ejemplo-usuario-y-perfil",children:"Ejemplo: Usuario y Perfil"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Modelo User\r\nmodule.exports = {\r\n  name: 'User',\r\n  fields: {\r\n    id: { type: 'id' },\r\n    email: { type: 'string', unique: true },\r\n    // Relaci\xf3n uno a uno con Profile\r\n    profile: { \r\n      type: 'relation', \r\n      model: 'Profile', \r\n      foreignKey: 'userId',\r\n      relation: 'hasOne'\r\n    }\r\n  }\r\n};\r\n\r\n// Modelo Profile\r\nmodule.exports = {\r\n  name: 'Profile',\r\n  fields: {\r\n    id: { type: 'id' },\r\n    userId: { type: 'id', unique: true }, // Garantiza relaci\xf3n uno a uno\r\n    bio: { type: 'text', nullable: true },\r\n    avatarUrl: { type: 'string', nullable: true },\r\n    // Relaci\xf3n inversa con User\r\n    user: { \r\n      type: 'relation', \r\n      model: 'User', \r\n      localKey: 'userId',\r\n      relation: 'belongsTo'\r\n    }\r\n  }\r\n};\n"})}),"\n",(0,a.jsx)(n.h2,{id:"relaciones-uno-a-muchos--muchos-a-uno",children:"Relaciones Uno a Muchos / Muchos a Uno"}),"\n",(0,a.jsx)(n.p,{children:"Una relaci\xf3n uno a muchos conecta una instancia de un modelo con m\xfaltiples instancias de otro modelo."}),"\n",(0,a.jsx)(n.h3,{id:"ejemplo-autor-y-art\xedculos",children:"Ejemplo: Autor y Art\xedculos"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Modelo Author\r\nmodule.exports = {\r\n  name: 'Author',\r\n  fields: {\r\n    id: { type: 'id' },\r\n    name: { type: 'string', required: true },\r\n    // Relaci\xf3n uno a muchos con Article\r\n    articles: { \r\n      type: 'relation', \r\n      model: 'Article', \r\n      foreignKey: 'authorId',\r\n      relation: 'hasMany'\r\n    }\r\n  }\r\n};\r\n\r\n// Modelo Article\r\nmodule.exports = {\r\n  name: 'Article',\r\n  fields: {\r\n    id: { type: 'id' },\r\n    title: { type: 'string', required: true },\r\n    content: { type: 'text', required: true },\r\n    authorId: { type: 'id', required: true },\r\n    // Relaci\xf3n muchos a uno con Author\r\n    author: { \r\n      type: 'relation', \r\n      model: 'Author', \r\n      localKey: 'authorId',\r\n      relation: 'belongsTo'\r\n    }\r\n  }\r\n};\n"})}),"\n",(0,a.jsx)(n.h2,{id:"relaciones-muchos-a-muchos",children:"Relaciones Muchos a Muchos"}),"\n",(0,a.jsx)(n.p,{children:"Una relaci\xf3n muchos a muchos conecta m\xfaltiples instancias de un modelo con m\xfaltiples instancias de otro modelo, utilizando una tabla de uni\xf3n."}),"\n",(0,a.jsx)(n.h3,{id:"ejemplo-productos-y-categor\xedas",children:"Ejemplo: Productos y Categor\xedas"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Modelo Product\r\nmodule.exports = {\r\n  name: 'Product',\r\n  fields: {\r\n    id: { type: 'id' },\r\n    name: { type: 'string', required: true },\r\n    price: { type: 'number', required: true },\r\n    // Relaci\xf3n muchos a muchos con Category\r\n    categories: { \r\n      type: 'relation', \r\n      model: 'Category', \r\n      through: 'ProductCategory',\r\n      foreignKey: 'productId',\r\n      otherKey: 'categoryId',\r\n      relation: 'belongsToMany'\r\n    }\r\n  }\r\n};\r\n\r\n// Modelo Category\r\nmodule.exports = {\r\n  name: 'Category',\r\n  fields: {\r\n    id: { type: 'id' },\r\n    name: { type: 'string', required: true },\r\n    // Relaci\xf3n muchos a muchos con Product\r\n    products: { \r\n      type: 'relation', \r\n      model: 'Product', \r\n      through: 'ProductCategory',\r\n      foreignKey: 'categoryId',\r\n      otherKey: 'productId',\r\n      relation: 'belongsToMany'\r\n    }\r\n  }\r\n};\r\n\r\n// Modelo de uni\xf3n (tabla pivote)\r\nmodule.exports = {\r\n  name: 'ProductCategory',\r\n  fields: {\r\n    id: { type: 'id' },\r\n    productId: { type: 'id', required: true },\r\n    categoryId: { type: 'id', required: true },\r\n    // Campos adicionales si es necesario\r\n    featured: { type: 'boolean', default: false },\r\n    sortOrder: { type: 'integer', default: 0 }\r\n  },\r\n  indexes: [\r\n    // \xcdndice compuesto para garantizar unicidad\r\n    { fields: ['productId', 'categoryId'], unique: true }\r\n  ]\r\n};\n"})}),"\n",(0,a.jsx)(n.h2,{id:"relaciones-polim\xf3rficas",children:"Relaciones Polim\xf3rficas"}),"\n",(0,a.jsx)(n.p,{children:"Las relaciones polim\xf3rficas permiten que un modelo se relacione con m\xfaltiples tipos de modelos."}),"\n",(0,a.jsx)(n.h3,{id:"ejemplo-comentarios-en-diferentes-entidades",children:"Ejemplo: Comentarios en diferentes entidades"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Modelo Comment (puede pertenecer a un Post o a un Product)\r\nmodule.exports = {\r\n  name: 'Comment',\r\n  fields: {\r\n    id: { type: 'id' },\r\n    content: { type: 'text', required: true },\r\n    // Campos para relaci\xf3n polim\xf3rfica\r\n    commentableId: { type: 'id', required: true },\r\n    commentableType: { type: 'string', required: true }, // 'Post' o 'Product'\r\n    // Relaci\xf3n polim\xf3rfica\r\n    commentable: { \r\n      type: 'relation', \r\n      polymorphic: true,\r\n      morphType: 'commentableType',\r\n      morphId: 'commentableId'\r\n    }\r\n  }\r\n};\r\n\r\n// Modelo Post\r\nmodule.exports = {\r\n  name: 'Post',\r\n  fields: {\r\n    id: { type: 'id' },\r\n    title: { type: 'string', required: true },\r\n    // Relaci\xf3n polim\xf3rfica inversa\r\n    comments: { \r\n      type: 'relation', \r\n      model: 'Comment',\r\n      polymorphic: true,\r\n      as: 'commentable',\r\n      relation: 'morphMany'\r\n    }\r\n  }\r\n};\r\n\r\n// Modelo Product\r\nmodule.exports = {\r\n  name: 'Product',\r\n  fields: {\r\n    id: { type: 'id' },\r\n    name: { type: 'string', required: true },\r\n    // Relaci\xf3n polim\xf3rfica inversa\r\n    comments: { \r\n      type: 'relation', \r\n      model: 'Comment',\r\n      polymorphic: true,\r\n      as: 'commentable',\r\n      relation: 'morphMany'\r\n    }\r\n  }\r\n};\n"})}),"\n",(0,a.jsx)(n.h2,{id:"relaciones-recursivas",children:"Relaciones Recursivas"}),"\n",(0,a.jsx)(n.p,{children:"Las relaciones recursivas permiten que un modelo se relacione consigo mismo."}),"\n",(0,a.jsx)(n.h3,{id:"ejemplo-estructura-jer\xe1rquica-de-categor\xedas",children:"Ejemplo: Estructura jer\xe1rquica de categor\xedas"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Modelo Category con relaci\xf3n recursiva\r\nmodule.exports = {\r\n  name: 'Category',\r\n  fields: {\r\n    id: { type: 'id' },\r\n    name: { type: 'string', required: true },\r\n    parentId: { type: 'id', nullable: true },\r\n    // Relaci\xf3n con categor\xeda padre\r\n    parent: { \r\n      type: 'relation', \r\n      model: 'Category', \r\n      localKey: 'parentId',\r\n      relation: 'belongsTo'\r\n    },\r\n    // Relaci\xf3n con categor\xedas hijas\r\n    children: { \r\n      type: 'relation', \r\n      model: 'Category', \r\n      foreignKey: 'parentId',\r\n      relation: 'hasMany'\r\n    }\r\n  }\r\n};\n"})}),"\n",(0,a.jsx)(n.h2,{id:"opciones-de-relaciones",children:"Opciones de Relaciones"}),"\n",(0,a.jsx)(n.p,{children:"NexusData proporciona varias opciones para personalizar el comportamiento de las relaciones:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\r\n  name: 'Post',\r\n  fields: {\r\n    id: { type: 'id' },\r\n    title: { type: 'string', required: true },\r\n    // Relaci\xf3n con opciones avanzadas\r\n    comments: { \r\n      type: 'relation', \r\n      model: 'Comment', \r\n      foreignKey: 'postId',\r\n      relation: 'hasMany',\r\n      // Opciones adicionales\r\n      query: {\r\n        // Filtro predeterminado\r\n        where: { isApproved: true },\r\n        // Ordenamiento predeterminado\r\n        orderBy: { createdAt: 'desc' },\r\n        // L\xedmite predeterminado\r\n        limit: 10\r\n      },\r\n      // Comportamiento en cascada\r\n      onDelete: 'CASCADE', // Eliminar comentarios cuando se elimina el post\r\n      // Carga autom\xe1tica (eager loading)\r\n      autoFetch: true\r\n    }\r\n  }\r\n};\n"})}),"\n",(0,a.jsx)(n.h2,{id:"consultas-con-relaciones",children:"Consultas con Relaciones"}),"\n",(0,a.jsx)(n.p,{children:"NexusData facilita las consultas que involucran relaciones:"}),"\n",(0,a.jsx)(n.h3,{id:"carga-de-relaciones-eager-loading",children:"Carga de Relaciones (Eager Loading)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Obtener todos los posts con sus comentarios\r\nconst posts = await nexus.models.Post.findMany({\r\n  include: {\r\n    comments: true\r\n  }\r\n});\r\n\r\n// Carga profunda de relaciones anidadas\r\nconst authors = await nexus.models.Author.findMany({\r\n  include: {\r\n    posts: {\r\n      include: {\r\n        comments: {\r\n          include: {\r\n            user: true\r\n          }\r\n        },\r\n        categories: true\r\n      }\r\n    }\r\n  }\r\n});\n"})}),"\n",(0,a.jsx)(n.h3,{id:"filtrado-por-relaciones",children:"Filtrado por Relaciones"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Encontrar todos los posts que tengan al menos un comentario\r\nconst postsWithComments = await nexus.models.Post.findMany({\r\n  where: {\r\n    comments: {\r\n      some: {\r\n        content: {\r\n          contains: 'great'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\n// Encontrar productos en m\xfaltiples categor\xedas\r\nconst products = await nexus.models.Product.findMany({\r\n  where: {\r\n    categories: {\r\n      some: {\r\n        name: {\r\n          in: ['Electronics', 'Gadgets']\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\n"})}),"\n",(0,a.jsx)(n.h2,{id:"mejores-pr\xe1cticas",children:"Mejores Pr\xe1cticas"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Nombres claros : Usa nombres descriptivos para tus relaciones."}),"\n",(0,a.jsx)(n.li,{children:"\xcdndices : Crea \xedndices en las claves for\xe1neas para mejorar el rendimiento."}),"\n",(0,a.jsx)(n.li,{children:"Integridad referencial : Configura acciones en cascada apropiadas (onDelete, onUpdate)."}),"\n",(0,a.jsx)(n.li,{children:"Carga selectiva : Evita cargar relaciones innecesarias para mejorar el rendimiento."}),"\n",(0,a.jsx)(n.li,{children:"Normalizaci\xf3n : Dise\xf1a tus relaciones siguiendo principios de normalizaci\xf3n de bases de datos."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"pr\xf3ximos-pasos",children:"Pr\xf3ximos Pasos"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Aprende sobre validaci\xf3n de datos"}),"\n",(0,a.jsx)(n.li,{children:"Explora consultas avanzadas con GraphQL"}),"\n",(0,a.jsx)(n.li,{children:"Implementa l\xf3gica de negocio utilizando hooks y middleware"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>t});var o=r(6540);const a={},i=o.createContext(a);function s(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);