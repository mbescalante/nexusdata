"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6353],{2642:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>t,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"data-modeling/validation","title":"Validaci\xf3n de Datos","description":"La validaci\xf3n de datos es esencial para mantener la integridad y consistencia de tu aplicaci\xf3n. NexusData proporciona un sistema completo de validaci\xf3n que te permite definir reglas para tus modelos.","source":"@site/docs/data-modeling/validation.md","sourceDirName":"data-modeling","slug":"/data-modeling/validation","permalink":"/nexusdata/en/docs/data-modeling/validation","draft":false,"unlisted":false,"editUrl":"https://github.com/mbescalante/nexusdata/edit/main/docs/data-modeling/validation.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Relaciones entre Modelos","permalink":"/nexusdata/en/docs/data-modeling/relationships"},"next":{"title":"Funciones Clave","permalink":"/nexusdata/en/docs/graphql-api/"}}');var i=n(4848),d=n(8453);const t={sidebar_position:3},s="Validaci\xf3n de Datos",o={},l=[{value:"Validaciones B\xe1sicas",id:"validaciones-b\xe1sicas",level:2},{value:"Validadores Personalizados",id:"validadores-personalizados",level:2},{value:"Validaci\xf3n Condicional",id:"validaci\xf3n-condicional",level:2},{value:"Validaci\xf3n de Relaciones",id:"validaci\xf3n-de-relaciones",level:2},{value:"Validaci\xf3n de Objetos Anidados",id:"validaci\xf3n-de-objetos-anidados",level:2},{value:"Mensajes de Error Personalizados",id:"mensajes-de-error-personalizados",level:2},{value:"Validaci\xf3n a Nivel de Modelo",id:"validaci\xf3n-a-nivel-de-modelo",level:2}];function c(e){const r={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"validaci\xf3n-de-datos",children:"Validaci\xf3n de Datos"})}),"\n",(0,i.jsx)(r.p,{children:"La validaci\xf3n de datos es esencial para mantener la integridad y consistencia de tu aplicaci\xf3n. NexusData proporciona un sistema completo de validaci\xf3n que te permite definir reglas para tus modelos."}),"\n",(0,i.jsx)(r.h2,{id:"validaciones-b\xe1sicas",children:"Validaciones B\xe1sicas"}),"\n",(0,i.jsx)(r.p,{children:"NexusData incluye validaciones b\xe1sicas que puedes aplicar directamente en la definici\xf3n de tus campos:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"module.exports = {\r\n  name: 'User',\r\n  fields: {\r\n    id: { type: 'id' },\r\n    username: { \r\n      type: 'string', \r\n      required: true,           // Campo obligatorio\r\n      minLength: 3,             // Longitud m\xednima\r\n      maxLength: 50,            // Longitud m\xe1xima\r\n      pattern: '^[a-zA-Z0-9_]+$' // Expresi\xf3n regular para validaci\xf3n\r\n    },\r\n    email: { \r\n      type: 'string', \r\n      required: true,\r\n      format: 'email',          // Formato predefinido\r\n      unique: true              // Valor \xfanico en la base de datos\r\n    },\r\n    age: {\r\n      type: 'number',\r\n      min: 18,                  // Valor m\xednimo\r\n      max: 120,                 // Valor m\xe1ximo\r\n      integer: true             // Debe ser un n\xfamero entero\r\n    },\r\n    website: {\r\n      type: 'string',\r\n      format: 'url',            // Validaci\xf3n de URL\r\n      nullable: true            // Puede ser nulo\r\n    },\r\n    role: {\r\n      type: 'string',\r\n      enum: ['admin', 'editor', 'user'], // Valores permitidos\r\n      default: 'user'           // Valor predeterminado\r\n    }\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(r.h2,{id:"validadores-personalizados",children:"Validadores Personalizados"}),"\n",(0,i.jsx)(r.p,{children:"Para l\xf3gica de validaci\xf3n m\xe1s compleja, puedes definir validadores personalizados:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"module.exports = {\r\n  name: 'Product',\r\n  fields: {\r\n    id: { type: 'id' },\r\n    name: { type: 'string', required: true },\r\n    price: { \r\n      type: 'number', \r\n      required: true,\r\n      validate: {\r\n        validator: (value) => value > 0,\r\n        message: 'El precio debe ser mayor que cero'\r\n      }\r\n    },\r\n    discountPrice: { \r\n      type: 'number', \r\n      nullable: true,\r\n      validate: {\r\n        validator: function(value, data) {\r\n          // Solo validar si hay un precio con descuento\r\n          if (value === null) return true;\r\n          \r\n          // El precio con descuento debe ser menor que el precio regular\r\n          return value < data.price;\r\n        },\r\n        message: 'El precio con descuento debe ser menor que el precio regular'\r\n      }\r\n    },\r\n    sku: {\r\n      type: 'string',\r\n      validate: {\r\n        // Validador as\xedncrono (\xfatil para verificaciones en base de datos)\r\n        async validator(value, data, context) {\r\n          // Verificar si el SKU ya existe (excluyendo el producto actual)\r\n          const existingProduct = await context.models.Product.findFirst({\r\n            where: {\r\n              sku: value,\r\n              id: { not: data.id } // Excluir el producto actual en actualizaciones\r\n            }\r\n          });\r\n          \r\n          // Retorna true si no existe un producto con el mismo SKU\r\n          return !existingProduct;\r\n        },\r\n        message: 'Este SKU ya est\xe1 en uso'\r\n      }\r\n    }\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(r.h2,{id:"validaci\xf3n-condicional",children:"Validaci\xf3n Condicional"}),"\n",(0,i.jsx)(r.p,{children:"Puedes aplicar validaciones condicionales basadas en otros campos:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"module.exports = {\r\n  name: 'Subscription',\r\n  fields: {\r\n    id: { type: 'id' },\r\n    type: { \r\n      type: 'string', \r\n      enum: ['free', 'basic', 'premium'], \r\n      required: true \r\n    },\r\n    paymentMethod: { \r\n      type: 'string',\r\n      // Solo requerido si el tipo no es 'free'\r\n      required: function(data) {\r\n        return data.type !== 'free';\r\n      },\r\n      // Mensaje personalizado\r\n      messages: {\r\n        required: 'Se requiere un m\xe9todo de pago para suscripciones de pago'\r\n      }\r\n    },\r\n    cardNumber: {\r\n      type: 'string',\r\n      // Solo validar si el m\xe9todo de pago es 'credit_card'\r\n      validate: {\r\n        validator: function(value, data) {\r\n          // Omitir validaci\xf3n si no aplica\r\n          if (data.paymentMethod !== 'credit_card') return true;\r\n          \r\n          // Validar n\xfamero de tarjeta (ejemplo simplificado)\r\n          return /^\\d{16}$/.test(value);\r\n        },\r\n        message: 'N\xfamero de tarjeta inv\xe1lido'\r\n      }\r\n    }\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(r.h2,{id:"validaci\xf3n-de-relaciones",children:"Validaci\xf3n de Relaciones"}),"\n",(0,i.jsx)(r.p,{children:"Tambi\xe9n puedes validar relaciones entre modelos:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"module.exports = {\r\n  name: 'Order',\r\n  fields: {\r\n    id: { type: 'id' },\r\n    userId: { type: 'id', required: true },\r\n    items: { \r\n      type: 'json', \r\n      required: true,\r\n      // Validar que la orden tenga al menos un item\r\n      validate: {\r\n        validator: (value) => Array.isArray(value) && value.length > 0,\r\n        message: 'La orden debe tener al menos un item'\r\n      }\r\n    },\r\n    shippingAddressId: { \r\n      type: 'id',\r\n      // Validaci\xf3n as\xedncrona para verificar que la direcci\xf3n pertenezca al usuario\r\n      validate: {\r\n        async validator(value, data, context) {\r\n          if (!value) return true;\r\n          \r\n          const address = await context.models.Address.findUnique({\r\n            where: { id: value }\r\n          });\r\n          \r\n          return address && address.userId === data.userId;\r\n        },\r\n        message: 'La direcci\xf3n de env\xedo debe pertenecer al usuario'\r\n      }\r\n    }\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(r.h2,{id:"validaci\xf3n-de-objetos-anidados",children:"Validaci\xf3n de Objetos Anidados"}),"\n",(0,i.jsx)(r.p,{children:"Para validar estructuras de datos complejas:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"module.exports = {\r\n  name: 'Product',\r\n  fields: {\r\n    id: { type: 'id' },\r\n    name: { type: 'string', required: true },\r\n    // Validaci\xf3n de objeto anidado\r\n    dimensions: {\r\n      type: 'object',\r\n      fields: {\r\n        width: { \r\n          type: 'number', \r\n          required: true,\r\n          min: 0\r\n        },\r\n        height: { \r\n          type: 'number', \r\n          required: true,\r\n          min: 0\r\n        },\r\n        depth: { \r\n          type: 'number', \r\n          required: true,\r\n          min: 0\r\n        }\r\n      },\r\n      // Validaci\xf3n del objeto completo\r\n      validate: {\r\n        validator: function(value) {\r\n          // Calcular volumen\r\n          const volume = value.width * value.height * value.depth;\r\n          // Verificar que el volumen sea razonable\r\n          return volume <= 1000000; // Ejemplo: m\xe1ximo 1m\xb3\r\n        },\r\n        message: 'Las dimensiones del producto son demasiado grandes'\r\n      }\r\n    },\r\n    // Validaci\xf3n de array de objetos\r\n    variants: {\r\n      type: 'array',\r\n      of: {\r\n        type: 'object',\r\n        fields: {\r\n          color: { type: 'string', required: true },\r\n          size: { type: 'string', required: true },\r\n          price: { type: 'number', required: true, min: 0 }\r\n        }\r\n      },\r\n      // Validaci\xf3n del array completo\r\n      validate: {\r\n        validator: function(variants) {\r\n          // Verificar que no haya combinaciones duplicadas de color/tama\xf1o\r\n          const combinations = new Set();\r\n          for (const variant of variants) {\r\n            const key = `${variant.color}-${variant.size}`;\r\n            if (combinations.has(key)) return false;\r\n            combinations.add(key);\r\n          }\r\n          return true;\r\n        },\r\n        message: 'No puede haber variantes duplicadas con la misma combinaci\xf3n de color y tama\xf1o'\r\n      }\r\n    }\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(r.h2,{id:"mensajes-de-error-personalizados",children:"Mensajes de Error Personalizados"}),"\n",(0,i.jsx)(r.p,{children:"Puedes personalizar los mensajes de error para cada validaci\xf3n:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"module.exports = {\r\n  name: 'User',\r\n  fields: {\r\n    id: { type: 'id' },\r\n    username: { \r\n      type: 'string', \r\n      required: true,\r\n      minLength: 3,\r\n      maxLength: 50,\r\n      // Mensajes personalizados para cada validaci\xf3n\r\n      messages: {\r\n        required: 'El nombre de usuario es obligatorio',\r\n        minLength: 'El nombre de usuario debe tener al menos 3 caracteres',\r\n        maxLength: 'El nombre de usuario no puede exceder los 50 caracteres'\r\n      }\r\n    },\r\n    email: { \r\n      type: 'string', \r\n      required: true,\r\n      format: 'email',\r\n      messages: {\r\n        required: 'El correo electr\xf3nico es obligatorio',\r\n        format: 'Por favor, introduce un correo electr\xf3nico v\xe1lido'\r\n      }\r\n    }\r\n  }\r\n};\n"})}),"\n",(0,i.jsx)(r.h2,{id:"validaci\xf3n-a-nivel-de-modelo",children:"Validaci\xf3n a Nivel de Modelo"}),"\n",(0,i.jsx)(r.p,{children:"Adem\xe1s de validar campos individuales, puedes definir validaciones a nivel de modelo:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"module.exports = {\r\n  name: 'Reservation',\r\n  fields: {\r\n    id: { type: 'id' },\r\n    startDate: { type: 'date', required: true },\r\n    endDate: { type: 'date', required: true },\r\n    roomId: { type: 'id', required: true },\r\n    guestCount: { type: 'integer', required: true, min: 1 }\r\n  },\r\n  // Validaciones a nivel de modelo\r\n  validate: [\r\n    {\r\n      // Validar que la fecha de fin sea posterior a la de inicio\r\n      validator: function(data) {\r\n        return new Date(data.endDate) > new Date(data.startDate);\r\n      },\r\n      message: 'La fecha de salida debe ser posterior a la fecha de entrada'\r\n    },\r\n    {\r\n      // Validaci\xf3n as\xedncrona para verificar disponibilidad\r\n      async validator(data, context) {\r\n        // Omitir en actualizaciones donde no cambian las fechas o habitaci\xf3n\r\n        if (data.id) {\r\n          const existing = await context.models.Reservation.findUnique({\r\n            where: { id: data.id }\r\n          });\r\n          \r\n          if (existing && \r\n              existing.startDate === data.startDate && \r\n              existing.endDate === data.endDate &&\r\n              existing.roomId === data.roomId) {\r\n            return true;\r\n          }\r\n        }\r\n        \r\n        // Verificar si hay reservas que se solapan\r\n        const overlapping = await context.models.Reservation.findFirst({\r\n          where: {\r\n            roomId: data.roomId,\r\n            id: { not: data.id }, // Excluir la reserva actual en actualizaciones\r\n            OR: [\r\n              {\r\n                // Caso 1: La nueva reserva comienza durante una existente\r\n                startDate: { lte: data.startDate },\r\n                endDate: { gte: data.startDate }\r\n              },\r\n              {\r\n                // Caso 2: La nueva reserva termina durante una existente\r\n                startDate: { lte: data.endDate },\r\n                endDate: { gte: data.endDate }\r\n              },\r\n              {\r\n                // Caso 3: La nueva reserva engloba completamente una existente\r\n                startDate: { gte: data.startDate },\r\n                endDate: { lte: data.endDate }\r\n              }\r\n            ]\r\n          }\r\n        });\r\n        \r\n        return !\n"})})]})}function u(e={}){const{wrapper:r}={...(0,d.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>t,x:()=>s});var a=n(6540);const i={},d=a.createContext(i);function t(e){const r=a.useContext(d);return a.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),a.createElement(d.Provider,{value:r},e.children)}}}]);