"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6127],{8453:(n,e,r)=>{r.d(e,{R:()=>t,x:()=>o});var i=r(6540);const a={},s=i.createContext(a);function t(n){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:t(n.components),i.createElement(s.Provider,{value:e},n.children)}},9398:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>t,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"plugins/desarrollo","title":"Desarrollo de Plugins","description":"Gu\xeda completa para desarrollar plugins personalizados para NexusData","source":"@site/docs/plugins/desarrollo.md","sourceDirName":"plugins","slug":"/plugins/desarrollo","permalink":"/en/docs/plugins/desarrollo","draft":false,"unlisted":false,"editUrl":"https://github.com/nexusdata/nexusdata-docs/edit/main/docs/plugins/desarrollo.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Desarrollo de Plugins","description":"Gu\xeda completa para desarrollar plugins personalizados para NexusData"},"sidebar":"tutorialSidebar","previous":{"title":"Plugins","permalink":"/en/docs/plugins/"},"next":{"title":"Marketplace de Plugins","permalink":"/en/docs/plugins/marketplace"}}');var a=r(4848),s=r(8453);const t={sidebar_position:2,title:"Desarrollo de Plugins",description:"Gu\xeda completa para desarrollar plugins personalizados para NexusData"},o="Desarrollo de Plugins",c={},l=[{value:"Introducci\xf3n",id:"introducci\xf3n",level:2},{value:"Estructura de un Plugin",id:"estructura-de-un-plugin",level:2},{value:"Archivo package.json",id:"archivo-packagejson",level:3},{value:"Archivo index.js",id:"archivo-indexjs",level:3},{value:"Esquema de configuraci\xf3n",id:"esquema-de-configuraci\xf3n",level:3},{value:"Tipos de Plugins",id:"tipos-de-plugins",level:2},{value:"Plugins de Modelo",id:"plugins-de-modelo",level:3},{value:"Plugins de Servicio",id:"plugins-de-servicio",level:3},{value:"Plugins de UI",id:"plugins-de-ui",level:3},{value:"Plugins de Autenticaci\xf3n",id:"plugins-de-autenticaci\xf3n",level:3},{value:"Ciclo de Desarrollo",id:"ciclo-de-desarrollo",level:2},{value:"1. Configuraci\xf3n del Entorno",id:"1-configuraci\xf3n-del-entorno",level:3},{value:"2. Estructura Inicial",id:"2-estructura-inicial",level:3},{value:"3. Desarrollo",id:"3-desarrollo",level:3},{value:"4. Pruebas",id:"4-pruebas",level:3},{value:"5. Empaquetado",id:"5-empaquetado",level:3},{value:"Mejores Pr\xe1cticas",id:"mejores-pr\xe1cticas",level:2},{value:"Seguridad",id:"seguridad",level:3},{value:"Rendimiento",id:"rendimiento",level:3},{value:"Compatibilidad",id:"compatibilidad",level:3},{value:"Documentaci\xf3n",id:"documentaci\xf3n",level:3},{value:"Ejemplos Completos",id:"ejemplos-completos",level:2},{value:"Plugin de Integraci\xf3n con Servicio Externo",id:"plugin-de-integraci\xf3n-con-servicio-externo",level:3},{value:"Publicaci\xf3n en el Marketplace",id:"publicaci\xf3n-en-el-marketplace",level:2}];function d(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"desarrollo-de-plugins",children:"Desarrollo de Plugins"})}),"\n",(0,a.jsx)(e.p,{children:"Esta gu\xeda te ense\xf1ar\xe1 c\xf3mo desarrollar plugins personalizados para extender la funcionalidad de NexusData seg\xfan tus necesidades espec\xedficas."}),"\n",(0,a.jsx)(e.h2,{id:"introducci\xf3n",children:"Introducci\xf3n"}),"\n",(0,a.jsx)(e.p,{children:"Los plugins de NexusData te permiten:"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"A\xf1adir nuevas funcionalidades al sistema"}),"\n",(0,a.jsx)(e.li,{children:"Integrar servicios externos"}),"\n",(0,a.jsx)(e.li,{children:"Personalizar el comportamiento existente"}),"\n",(0,a.jsx)(e.li,{children:"Crear conectores para fuentes de datos espec\xedficas"}),"\n",(0,a.jsx)(e.li,{children:"Implementar l\xf3gica de negocio reutilizable"}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"estructura-de-un-plugin",children:"Estructura de un Plugin"}),"\n",(0,a.jsx)(e.p,{children:"Un plugin de NexusData sigue una estructura est\xe1ndar:"}),"\n",(0,a.jsx)(e.h3,{id:"archivo-packagejson",children:"Archivo package.json"}),"\n",(0,a.jsxs)(e.p,{children:["El archivo ",(0,a.jsx)(e.code,{children:"package.json"})," define los metadatos del plugin:"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\r\n  "name": "nexusdata-plugin-mi-plugin",\r\n  "version": "1.0.0",\r\n  "description": "Mi plugin personalizado para NexusData",\r\n  "main": "index.js",\r\n  "keywords": [\r\n    "nexusdata",\r\n    "plugin",\r\n    "mi-plugin"\r\n  ],\r\n  "author": "Tu Nombre",\r\n  "license": "MIT",\r\n  "dependencies": {\r\n    // Dependencias espec\xedficas del plugin\r\n  },\r\n  "peerDependencies": {\r\n    "@nexusdata/core": "^2.0.0"\r\n  },\r\n  "nexusdata": {\r\n    "id": "mi-plugin",\r\n    "displayName": "Mi Plugin",\r\n    "description": "A\xf1ade funcionalidades espec\xedficas a NexusData",\r\n    "category": "integraci\xf3n",\r\n    "icon": "./assets/icon.png",\r\n    "compatibility": {\r\n      "minVersion": "2.0.0",\r\n      "maxVersion": "3.0.0"\r\n    }\r\n  }\r\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"archivo-indexjs",children:"Archivo index.js"}),"\n",(0,a.jsx)(e.p,{children:"El punto de entrada del plugin:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// index.js\r\nmodule.exports = function(context) {\r\n  // Registrar componentes, servicios, hooks, etc.\r\n  \r\n  // Registrar modelos\r\n  context.registerModel(require('./src/models/MiModelo'));\r\n  \r\n  // Registrar servicios\r\n  context.registerService('MiServicio', require('./src/services/MiServicio'));\r\n  \r\n  // Registrar hooks\r\n  context.registerHook('beforeCreate', require('./src/hooks/beforeCreate'));\r\n  \r\n  // Registrar componentes de UI (si es aplicable)\r\n  if (context.ui) {\r\n    context.ui.registerComponent('MiComponente', require('./src/components/MiComponente'));\r\n    context.ui.addMenuItem({\r\n      label: 'Mi Plugin',\r\n      icon: 'puzzle-piece',\r\n      path: '/mi-plugin'\r\n    });\r\n  }\r\n  \r\n  // Registrar comandos CLI (si es aplicable)\r\n  if (context.cli) {\r\n    context.cli.registerCommand(require('./src/commands/miComando'));\r\n  }\r\n  \r\n  // Inicializaci\xf3n del plugin\r\n  context.onInit(async () => {\r\n    // C\xf3digo que se ejecuta al inicializar el plugin\r\n    context.logger.info('Mi Plugin inicializado correctamente');\r\n  });\r\n  \r\n  // Limpieza al desactivar el plugin\r\n  context.onDeactivate(async () => {\r\n    // C\xf3digo que se ejecuta al desactivar el plugin\r\n    context.logger.info('Mi Plugin desactivado correctamente');\r\n  });\r\n  \r\n  return {\r\n    name: 'mi-plugin',\r\n    version: '1.0.0'\r\n  };\r\n};\n"})}),"\n",(0,a.jsx)(e.p,{children:"Este archivo exporta una funci\xf3n que se pasa al contexto del plugin. Dentro de esta funci\xf3n, puedes registrar modelos, servicios, hooks, componentes de UI, comandos CLI, etc. Tambi\xe9n puedes definir eventos de inicializaci\xf3n y desactivaci\xf3n."}),"\n",(0,a.jsx)(e.h3,{id:"esquema-de-configuraci\xf3n",children:"Esquema de configuraci\xf3n"}),"\n",(0,a.jsx)(e.p,{children:"Define las opciones configurables del plugin:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// config/schema.js\r\nmodule.exports = {\r\n  apiKey: {\r\n    type: 'string',\r\n    required: true,\r\n    sensitive: true,\r\n    description: 'API Key para el servicio externo'\r\n  },\r\n  endpoint: {\r\n    type: 'string',\r\n    default: 'https://api.servicio.com/v1',\r\n    description: 'URL del endpoint del servicio'\r\n  },\r\n  timeout: {\r\n    type: 'number',\r\n    default: 5000,\r\n    description: 'Tiempo de espera en milisegundos'\r\n  },\r\n  features: {\r\n    type: 'object',\r\n    properties: {\r\n      featureA: {\r\n        type: 'boolean',\r\n        default: true,\r\n        description: 'Habilitar caracter\xedstica A'\r\n      },\r\n      featureB: {\r\n        type: 'boolean',\r\n        default: false,\r\n        description: 'Habilitar caracter\xedstica B'\r\n      }\r\n    }\r\n  }\r\n};\n"})}),"\n",(0,a.jsx)(e.h2,{id:"tipos-de-plugins",children:"Tipos de Plugins"}),"\n",(0,a.jsx)(e.h3,{id:"plugins-de-modelo",children:"Plugins de Modelo"}),"\n",(0,a.jsx)(e.p,{children:"Extienden o crean nuevos modelos de datos:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// src/models/MiModelo.js\r\nconst { Model } = require('@nexusdata/core');\r\n\r\nclass ProductoExtendido extends Model {\r\n  static config = {\r\n    name: 'ProductoExtendido',\r\n    extends: 'Producto', // Extiende el modelo base Producto\r\n    fields: {\r\n      caracteristicasAvanzadas: {\r\n        type: 'json',\r\n        description: 'Caracter\xedsticas avanzadas del producto'\r\n      },\r\n      puntuacionCalidad: {\r\n        type: 'number',\r\n        min: 0,\r\n        max: 100,\r\n        description: 'Puntuaci\xf3n de calidad (0-100)'\r\n      }\r\n    },\r\n    hooks: {\r\n      beforeCreate: async (data, context) => {\r\n        // L\xf3gica personalizada antes de crear\r\n        if (!data.puntuacionCalidad) {\r\n          data.puntuacionCalidad = 50; // Valor por defecto\r\n        }\r\n        return data;\r\n      }\r\n    },\r\n    indexes: [\r\n      {\r\n        fields: ['puntuacionCalidad'],\r\n        type: 'btree'\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nmodule.exports = ProductoExtendido;\n"})}),"\n",(0,a.jsx)(e.h3,{id:"plugins-de-servicio",children:"Plugins de Servicio"}),"\n",(0,a.jsx)(e.p,{children:"Implementan nuevos servicios:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// src/services/MiServicio.js\r\nconst { Service } = require('@nexusdata/core');\r\nconst axios = require('axios');\r\n\r\nclass ServicioIntegracion extends Service {\r\n  constructor(context) {\r\n    super(context);\r\n    this.config = context.config.get('mi-plugin');\r\n    this.client = axios.create({\r\n      baseURL: this.config.endpoint,\r\n      timeout: this.config.timeout,\r\n      headers: {\r\n        'Authorization': `Bearer ${this.config.apiKey}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n  \r\n  async sincronizarDatos(options = {}) {\r\n    try {\r\n      // Obtener datos del servicio externo\r\n      const response = await this.client.get('/datos', {\r\n        params: options.params || {}\r\n      });\r\n      \r\n      // Procesar y almacenar los datos\r\n      const items = response.data.items || [];\r\n      \r\n      this.logger.info(`Sincronizando ${items.length} elementos`);\r\n      \r\n      // Usar transacci\xf3n para garantizar consistencia\r\n      return await this.db.transaction(async (tx) => {\r\n        const results = [];\r\n        \r\n        for (const item of items) {\r\n          // Transformar datos si es necesario\r\n          const transformedItem = this.transformarItem(item);\r\n          \r\n          // Buscar si ya existe\r\n          const existing = await tx.findOne('MiModelo', {\r\n            externalId: transformedItem.externalId\r\n          });\r\n          \r\n          if (existing) {\r\n            // Actualizar\r\n            const updated = await tx.update('MiModelo', {\r\n              id: existing.id,\r\n              ...transformedItem,\r\n              lastSyncAt: new Date()\r\n            });\r\n            results.push({ action: 'updated', item: updated });\r\n          } else {\r\n            // Crear nuevo\r\n            const created = await tx.create('MiModelo', {\r\n              ...transformedItem,\r\n              lastSyncAt: new Date(),\r\n              createdAt: new Date()\r\n            });\r\n            results.push({ action: 'created', item: created });\r\n          }\r\n        }\r\n        \r\n        return {\r\n          total: items.length,\r\n          created: results.filter(r => r.action === 'created').length,\r\n          updated: results.filter(r => r.action === 'updated').length,\r\n          items: results\r\n        };\r\n      });\r\n    } catch (error) {\r\n      this.logger.error('Error al sincronizar datos', error);\r\n      throw new Error(`Error en sincronizaci\xf3n: ${error.message}`);\r\n    }\r\n  }\r\n  \r\n  transformarItem(item) {\r\n    // Implementar l\xf3gica de transformaci\xf3n\r\n    return {\r\n      externalId: item.id,\r\n      nombre: item.name,\r\n      descripcion: item.description,\r\n      metadatos: item.metadata || {}\r\n    };\r\n  }\r\n  \r\n  // Otros m\xe9todos del servicio...\r\n}\r\n\r\nmodule.exports = ServicioIntegracion;\n"})}),"\n",(0,a.jsx)(e.h3,{id:"plugins-de-ui",children:"Plugins de UI"}),"\n",(0,a.jsx)(e.p,{children:"Extienden la interfaz de usuario:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// src/components/MiComponente.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Card, Button, Table, Modal, Form } from '@nexusdata/ui';\r\n\r\nfunction MiComponente({ context }) {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  \r\n  const loadData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const result = await context.services.MiServicio.obtenerDatos();\r\n      setData(result.items);\r\n    } catch (error) {\r\n      context.ui.showNotification({\r\n        type: 'error',\r\n        message: `Error al cargar datos: ${error.message}`\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n  \r\n  const handleSync = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const result = await context.services.MiServicio.sincronizarDatos();\r\n      context.ui.showNotification({\r\n        type: 'success',\r\n        message: `Sincronizaci\xf3n completada: ${result.created} creados, ${result.updated} actualizados`\r\n      });\r\n      loadData();\r\n    } catch (error) {\r\n      context.ui.showNotification({\r\n        type: 'error',\r\n        message: `Error en sincronizaci\xf3n: ${error.message}`\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Renderizado del componente\r\n  return (\r\n    <Card title=\"Mi Plugin - Panel de Control\">\r\n      <div className=\"actions\">\r\n        <Button \r\n          onClick={handleSync} \r\n          loading={loading}\r\n          icon=\"sync\"\r\n        >\r\n          Sincronizar Datos\r\n        </Button>\r\n        <Button \r\n          onClick={() => setShowModal(true)}\r\n          variant=\"outline\"\r\n          icon=\"settings\"\r\n        >\r\n          Configuraci\xf3n\r\n        </Button>\r\n      </div>\r\n      \r\n      <Table\r\n        data={data}\r\n        columns={[\r\n          { key: 'id', title: 'ID' },\r\n          { key: 'nombre', title: 'Nombre' },\r\n          { key: 'lastSyncAt', title: '\xdaltima Sincronizaci\xf3n', type: 'datetime' },\r\n          { \r\n            key: 'actions', \r\n            title: 'Acciones',\r\n            render: (row) => (\r\n              <Button size=\"small\" onClick={() => handleViewDetails(row)}>\r\n                Ver Detalles\r\n              </Button>\r\n            )\r\n          }\r\n        ]}\r\n        loading={loading}\r\n        pagination={true}\r\n      />\r\n      \r\n      {/* Modal de configuraci\xf3n */}\r\n      <Modal\r\n        title=\"Configuraci\xf3n del Plugin\"\r\n        open={showModal}\r\n        onClose={() => setShowModal(false)}\r\n      >\r\n        {/* Contenido del modal */}\r\n      </Modal>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default MiComponente;\n"})}),"\n",(0,a.jsx)(e.h3,{id:"plugins-de-autenticaci\xf3n",children:"Plugins de Autenticaci\xf3n"}),"\n",(0,a.jsx)(e.p,{children:"Implementan nuevos m\xe9todos de autenticaci\xf3n:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// src/auth/MiProveedor.js\r\nconst { AuthProvider } = require('@nexusdata/core');\r\n\r\nclass MiProveedorAuth extends AuthProvider {\r\n  constructor(context) {\r\n    super(context);\r\n    this.config = context.config.get('mi-plugin');\r\n  }\r\n  \r\n  async authenticate(credentials) {\r\n    try {\r\n      // Implementar l\xf3gica de autenticaci\xf3n con servicio externo\r\n      const response = await fetch(this.config.authEndpoint, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          username: credentials.username,\r\n          password: credentials.password,\r\n          apiKey: this.config.apiKey\r\n        })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error.message || 'Error de autenticaci\xf3n');\r\n      }\r\n      \r\n      const authData = await response.json();\r\n      \r\n      // Buscar o crear usuario en el sistema\r\n      let user = await this.db.findOne('Usuario', {\r\n        where: {\r\n          externalId: authData.userId\r\n        }\r\n      });\r\n      \r\n      if (!user) {\r\n        // Crear nuevo usuario\r\n        user = await this.db.create('Usuario', {\r\n          externalId: authData.userId,\r\n          username: credentials.username,\r\n          email: authData.email,\r\n          nombre: authData.name,\r\n          authProvider: 'mi-proveedor',\r\n          createdAt: new Date()\r\n        });\r\n      }\r\n      \r\n      // Actualizar informaci\xf3n si es necesario\r\n      if (authData.name !== user.nombre || authData.email !== user.email) {\r\n        user = await this.db.update('Usuario', {\r\n          id: user.id,\r\n          nombre: authData.name,\r\n          email: authData.email,\r\n          lastLoginAt: new Date()\r\n        });\r\n      }\r\n      \r\n      // Generar token de sesi\xf3n\r\n      const token = this.auth.createToken({\r\n        userId: user.id,\r\n        externalId: user.externalId,\r\n        roles: authData.roles || []\r\n      });\r\n      \r\n      return {\r\n        user,\r\n        token,\r\n        expiresAt: new Date(Date.now() + 24 * 60 * 60 * 1000) // 24 horas\r\n      };\r\n    } catch (error) {\r\n      this.logger.error('Error de autenticaci\xf3n', error);\r\n      throw new Error(`Error de autenticaci\xf3n: ${error.message}`);\r\n    }\r\n  }\r\n  \r\n  async validateToken(token) {\r\n    // Implementar validaci\xf3n de token\r\n    // ...\r\n  }\r\n  \r\n  async getUserInfo(userId) {\r\n    // Obtener informaci\xf3n adicional del usuario\r\n    // ...\r\n  }\r\n}\r\n\r\nmodule.exports = MiProveedorAuth;\n"})}),"\n",(0,a.jsx)(e.h2,{id:"ciclo-de-desarrollo",children:"Ciclo de Desarrollo"}),"\n",(0,a.jsx)(e.h3,{id:"1-configuraci\xf3n-del-entorno",children:"1. Configuraci\xf3n del Entorno"}),"\n",(0,a.jsx)(e.p,{children:"Crea un nuevo directorio para tu plugin:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"mkdir mi-plugin\r\ncd mi-plugin\r\nnpm init -y\n"})}),"\n",(0,a.jsx)(e.p,{children:"Instala las dependencias necesarias:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"npm install --save-dev @nexusdata/core @nexusdata/plugin-dev\n"})}),"\n",(0,a.jsx)(e.h3,{id:"2-estructura-inicial",children:"2. Estructura Inicial"}),"\n",(0,a.jsx)(e.p,{children:"Crea la estructura b\xe1sica del plugin:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"npx @nexusdata/plugin-dev init\n"})}),"\n",(0,a.jsx)(e.p,{children:"Esto generar\xe1 la estructura de directorios y archivos b\xe1sicos."}),"\n",(0,a.jsx)(e.h3,{id:"3-desarrollo",children:"3. Desarrollo"}),"\n",(0,a.jsx)(e.p,{children:"Implementa la funcionalidad de tu plugin siguiendo las mejores pr\xe1cticas:"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Mant\xe9n una clara separaci\xf3n de responsabilidades"}),"\n",(0,a.jsx)(e.li,{children:"Documenta tu c\xf3digo"}),"\n",(0,a.jsx)(e.li,{children:"Escribe pruebas unitarias"}),"\n",(0,a.jsx)(e.li,{children:"Maneja errores adecuadamente"}),"\n",(0,a.jsx)(e.li,{children:"Utiliza el sistema de logging"}),"\n"]}),"\n",(0,a.jsx)(e.h3,{id:"4-pruebas",children:"4. Pruebas"}),"\n",(0,a.jsx)(e.p,{children:"Ejecuta pruebas unitarias:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"npm test\n"})}),"\n",(0,a.jsx)(e.p,{children:"Prueba el plugin en un entorno de desarrollo:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"npx @nexusdata/plugin-dev test-plugin\n"})}),"\n",(0,a.jsx)(e.h3,{id:"5-empaquetado",children:"5. Empaquetado"}),"\n",(0,a.jsx)(e.p,{children:"Empaqueta tu plugin para distribuci\xf3n:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"npm pack\n"})}),"\n",(0,a.jsx)(e.h2,{id:"mejores-pr\xe1cticas",children:"Mejores Pr\xe1cticas"}),"\n",(0,a.jsx)(e.h3,{id:"seguridad",children:"Seguridad"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Nunca incluyas credenciales en el c\xf3digo"}),"\n",(0,a.jsx)(e.li,{children:"Marca los campos sensibles como sensitive: true en el esquema de configuraci\xf3n"}),"\n",(0,a.jsx)(e.li,{children:"Valida y sanitiza todas las entradas de usuario"}),"\n",(0,a.jsx)(e.li,{children:"Implementa l\xedmites de tasa y protecci\xf3n contra ataques"}),"\n"]}),"\n",(0,a.jsx)(e.h3,{id:"rendimiento",children:"Rendimiento"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Optimiza consultas a bases de datos"}),"\n",(0,a.jsx)(e.li,{children:"Implementa cach\xe9 cuando sea apropiado"}),"\n",(0,a.jsx)(e.li,{children:"Evita bloquear el hilo principal"}),"\n",(0,a.jsx)(e.li,{children:"Usa operaciones por lotes para actualizaciones masivas"}),"\n"]}),"\n",(0,a.jsx)(e.h3,{id:"compatibilidad",children:"Compatibilidad"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Especifica claramente las versiones compatibles de NexusData"}),"\n",(0,a.jsx)(e.li,{children:"Prueba tu plugin con diferentes versiones"}),"\n",(0,a.jsx)(e.li,{children:"Implementa verificaciones de compatibilidad en tiempo de ejecuci\xf3n"}),"\n"]}),"\n",(0,a.jsx)(e.h3,{id:"documentaci\xf3n",children:"Documentaci\xf3n"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Proporciona un README.md completo"}),"\n",(0,a.jsx)(e.li,{children:"Documenta todas las opciones de configuraci\xf3n"}),"\n",(0,a.jsx)(e.li,{children:"Incluye ejemplos de uso"}),"\n",(0,a.jsx)(e.li,{children:"Proporciona informaci\xf3n de soluci\xf3n de problemas"}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"ejemplos-completos",children:"Ejemplos Completos"}),"\n",(0,a.jsx)(e.h3,{id:"plugin-de-integraci\xf3n-con-servicio-externo",children:"Plugin de Integraci\xf3n con Servicio Externo"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",children:"// Ejemplo de plugin que integra con un servicio externo de an\xe1lisis\r\nmodule.exports = function(context) {\r\n  // Registrar modelo para almacenar resultados de an\xe1lisis\r\n  context.registerModel(require('./src/models/ResultadoAnalisis'));\r\n  \r\n  // Registrar servicio de integraci\xf3n\r\n  context.registerService('ServicioAnalisis', require('./src/services/ServicioAnalisis'));\r\n  \r\n  // Registrar hooks para an\xe1lisis autom\xe1tico\r\n  context.registerHook('afterCreate', 'Producto', async (producto, ctx) => {\r\n    // Programar an\xe1lisis autom\xe1tico para nuevos productos\r\n    await ctx.services.ServicioAnalisis.programarAnalisis({\r\n      entidadId: producto.id,\r\n      tipoEntidad: 'Producto',\r\n      prioridad: 'normal'\r\n    });\r\n  });\r\n  \r\n  // Registrar componentes UI\r\n  if (context.ui) {\r\n    context.ui.registerComponent('PanelAnalisis', require('./src/components/PanelAnalisis'));\r\n    context.ui.registerComponent('ResultadosAnalisis', require('./src/components/ResultadosAnalisis'));\r\n    \r\n    // A\xf1adir elementos de men\xfa\r\n    context.ui.addMenuItem({\r\n      label: 'An\xe1lisis',\r\n      icon: 'chart-bar',\r\n      path: '/analisis'\r\n    });\r\n    \r\n    // A\xf1adir acciones a entidades existentes\r\n    context.ui.addEntityAction('Producto', {\r\n      label: 'Analizar',\r\n      icon: 'microscope',\r\n      action: async (producto, ctx) => {\r\n        await ctx.services.ServicioAnalisis.analizarAhora(producto.id);\r\n        ctx.ui.showNotification({\r\n          type: 'success',\r\n          message: 'An\xe1lisis iniciado correctamente'\r\n        });\r\n      }\r\n    });\r\n  }\r\n  \r\n  // Inicializaci\xf3n\r\n  context.onInit(async () => {\r\n    const config = context.config.get('plugin-analisis');\r\n    \r\n    // Verificar configuraci\xf3n\r\n    if (!config.apiKey) {\r\n      context.logger.warn('Plugin de An\xe1lisis: API Key no configurada');\r\n      return;\r\n    }\r\n    \r\n    // Inicializar servicio\r\n    await context.services.ServicioAnalisis.inicializar();\r\n    \r\n    // Programar tarea peri\xf3dica\r\n    context.scheduler.schedule('analisis.sincronizar', {\r\n      cron: '0 */4 * * *', // Cada 4 horas\r\n      handler: async () => {\r\n        await context.services.ServicioAnalisis.sincronizarResultados();\r\n      }\r\n    });\r\n    \r\n    context.logger.info('Plugin de An\xe1lisis inicializado correctamente');\r\n  });\r\n  \r\n  return {\r\n    name: 'plugin-analisis',\r\n    version: '1.0.0'\r\n  };\r\n};\n"})}),"\n",(0,a.jsx)(e.h2,{id:"publicaci\xf3n-en-el-marketplace",children:"Publicaci\xf3n en el Marketplace"}),"\n",(0,a.jsx)(e.p,{children:"Para publicar tu plugin en el Marketplace de NexusData:"}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsx)(e.li,{children:"Crea una cuenta en el Portal de Desarrolladores de NexusData"}),"\n",(0,a.jsx)(e.li,{children:"Registra tu plugin proporcionando la informaci\xf3n requerida"}),"\n",(0,a.jsx)(e.li,{children:"Sube tu paquete siguiendo las instrucciones del portal"}),"\n",(0,a.jsx)(e.li,{children:"Completa la documentaci\xf3n con ejemplos de uso y capturas de pantalla"}),"\n",(0,a.jsx)(e.li,{children:"Env\xeda para revisi\xf3n y espera la aprobaci\xf3n del equipo de NexusData\r\nUna vez aprobado, tu plugin estar\xe1 disponible para todos los usuarios de NexusData a trav\xe9s del Marketplace."}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(d,{...n})}):d(n)}}}]);